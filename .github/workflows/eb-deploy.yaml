name: Deploy to AWS Elastic Beanstalk

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21' # Adjust to your Java version

    - name: Set up Gradle
      uses: gradle/gradle-build-action@v3
      with:
        arguments: clean build

    - name: Install Elastic Beanstalk CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y python3 python3-pip
        pip3 install --upgrade pip
        pip3 install awsebcli

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: us-west-2

    - name: Prepare Deployment Package
      run: |
          mkdir -p app
          JAR_FILE=$(find build/libs -name "*.jar" | head -n 1)
          echo "Found JAR file: $JAR_FILE"
          
          # Copy the JAR to "app" and rename it to something predictable
          cp "$JAR_FILE" app/application.jar
      
          # Create a zip for EB
          cd app
          zip -r ../application.zip . 
          cd ..
          ls -lah
          echo "Packaging complete. application.zip created."
          

    - name: Deploy to AWS Elastic Beanstalk
      env:
        ENV_NAME: "spring-boot-app-env-1"                  # Replace with your Elastic Beanstalk environment name
        EB_APP_NAME: "spring-boot-app"          # Replace with your Elastic Beanstalk application name
        REGION: "us-west-2"                     # Replace with your AWS region
        TIMEOUT: 15                             # Timeout for environment creation
      run: |
        eb init -p corretto-21 $EB_APP_NAME --region $REGION
    
        # If environment doesn't exist, create it
        if eb status $ENV_NAME > /dev/null 2>&1; then
        echo "Environment '$ENV_NAME' already exists."
        else
        eb create $ENV_NAME --timeout $TIMEOUT
        fi
        # Set environment variables
        eb setenv SERVER_PORT=5000
        
        # Deploy using the zip we created
        eb deploy --staged --label "build-$(date +%s)"